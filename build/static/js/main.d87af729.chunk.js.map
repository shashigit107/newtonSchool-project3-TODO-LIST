{"version":3,"sources":["Components/Compt1.js","App.js","index.js"],"names":["Compt1","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","React","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","completed","oldValue","type","onChange","target","value","map","para","className","checked","updatedTodos","para3","toggleComplete","onClick","para2","submitEdits","filter","deleteTodo","App","ReactDOM","render","document","getElementById"],"mappings":"kMA0GeA,EAvGA,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAuDA,OArDAC,IAAMC,WAAU,WACd,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACFZ,EAASY,KAEV,IAEHL,IAAMC,WAAU,WACd,IAAMC,EAAOI,KAAKE,UAAUhB,GAC5BW,aAAaM,QAAQ,QAASP,KAC7B,CAACV,IA2CF,sBAAKkB,GAAG,YAAR,UACE,2CACA,uBAAMC,SA3CV,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdJ,IAAI,IAAIK,MAAOC,UACfC,KAAMvB,EACNwB,WAAW,GAEbzB,GAAS,SAAC0B,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAoBL,OAExBnB,EAAQ,KAgCN,UACE,uBACEyB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOjB,EAAQiB,EAAEU,OAAOC,QAClCA,MAAO7B,IAET,wBAAQ0B,KAAK,SAAb,yBAED5B,EAAMgC,KAAI,SAACC,GAAD,OACT,sBAAmBC,UAAU,OAA7B,UACE,sBAAKA,UAAU,YAAf,UACE,uBACEN,KAAK,WACLV,GAAG,YACHiB,QAASF,EAAKP,UACdG,SAAU,kBAvCtB,SAAwBX,GACtB,IAAIkB,EAAe,YAAIpC,GAAOgC,KAAI,SAACK,GAIjC,OAHIA,EAAMnB,KAAOA,IACfmB,EAAMX,WAAaW,EAAMX,WAEpBW,KAETpC,EAASmC,GAgCiBE,CAAeL,EAAKf,OAErCe,EAAKf,KAAOd,EACX,uBACEwB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOb,EAAea,EAAEU,OAAOC,UAG3C,8BAAME,EAAKR,UAGf,sBAAKS,UAAU,eAAf,UACGD,EAAKf,KAAOd,EACX,wBAAQmC,QAAS,kBA1C7B,SAAqBrB,GACnB,IAAMkB,EAAe,YAAIpC,GAAOgC,KAAI,SAACQ,GAInC,OAHIA,EAAMtB,KAAOA,IACfsB,EAAMf,KAAOnB,GAERkC,KAETvC,EAASmC,GACT/B,EAAe,MAkCkBoC,CAAYR,EAAKf,KAAxC,0BAEA,wBAAQqB,QAAS,kBAAMlC,EAAe4B,EAAKf,KAA3C,kBAGF,wBAAQqB,QAAS,kBA9D3B,SAAoBrB,GAClB,IAAIkB,EAAe,YAAIpC,GAAO0C,QAAO,SAACxC,GAAD,OAAUA,EAAKgB,KAAOA,KAC3DjB,EAASmC,GA4DsBO,CAAWV,EAAKf,KAAvC,yBAxBMe,EAAKf,WC/DR0B,MATf,WACE,OACM,8BACE,cAAC,EAAD,OCDVC,IAASC,OAAQ,cAAC,EAAD,IACfC,SAASC,eAAe,W","file":"static/js/main.d87af729.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Compt1 = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todoEditing, setTodoEditing] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const json = localStorage.getItem(\"todos\");\r\n    const loadedTodos = JSON.parse(json);\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const json = JSON.stringify(todos);\r\n    localStorage.setItem(\"todos\", json);\r\n  }, [todos]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      text: todo,\r\n      completed: false,\r\n    };\r\n    setTodos((oldValue)=>{\r\n        return [...oldValue,newTodo] \r\n    })\r\n    setTodo(\"\");\r\n  }\r\n\r\n  function deleteTodo(id) {\r\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  }\r\n\r\n  function toggleComplete(id) {\r\n    let updatedTodos = [...todos].map((para3) => {\r\n      if (para3.id === id) {\r\n        para3.completed = !para3.completed;\r\n      }\r\n      return para3\r\n    });\r\n    setTodos(updatedTodos);\r\n  }\r\n\r\n  function submitEdits(id) {\r\n    const updatedTodos = [...todos].map((para2) => {\r\n      if (para2.id === id) {\r\n        para2.text = editingText;\r\n      }\r\n      return para2;\r\n    });\r\n    setTodos(updatedTodos)\r\n    setTodoEditing(null);\r\n  }\r\n\r\n  return (\r\n    <div id=\"todo-list\">\r\n      <h1>Todo List</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setTodo(e.target.value)}\r\n          value={todo}\r\n        />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n      {todos.map((para) => (\r\n        <div key={para.id} className=\"todo\">\r\n          <div className=\"todo-text\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"completed\"\r\n              checked={para.completed}\r\n              onChange={() => toggleComplete(para.id)}\r\n            />\r\n            {para.id === todoEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setEditingText(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{para.text}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"todo-actions\">\r\n            {para.id === todoEditing ? (\r\n              <button onClick={() => submitEdits(para.id)}>Submit Edits</button>\r\n            ) : (\r\n              <button onClick={() => setTodoEditing(para.id)}>Edit</button>\r\n            )}\r\n\r\n            <button onClick={() => deleteTodo(para.id)}>Delete</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Compt1;","import react from \"react\";\nimport Compt1 from \"./Components/Compt1\";\nfunction App() {\n  return (\n        <div>\n          <Compt1/>\n        </div>\n    \n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}